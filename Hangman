import random ## Used to generate random word choice
import time ## used to seed random number generator
from words import word_list ## imports list of words

## get_word() - randomly chooses word
def get_word(): 
    random.seed(time.time()) ## seed random number generator
    word = random.choice(word_list) ## randomly choose a word from the list
    return word.upper() ## return the word to main()
## end get_word()

## play(word) - main process for hangman game
## accepts word into function and tracks wins and losses
## returns guessedRightCount and guessedWrongCount to main()
## to calculate average wins and losses
def play(word):
    playAgain = 'Y'
    guessedRightCount = 0
    guessedWrongCount = 0
    while playAgain.upper() == 'Y':
        word_completion = "_" * len(word)
        guessed = False
        guessed_letters = []
        guessed_words = []
        tries = 6
        print("Let's play Hangman!")
        print(display_hangman(tries))
        print(word_completion)
        print("\n")
        while not guessed and tries > 0:
            guess = input("Please guess a letter or word: ").upper()
            if len(guess) == 1 and guess.isalpha():
                if guess in guessed_letters: ## did user already guess that letter
                    print("You already guessed the letter", guess)
                elif guess not in word: ## letter is not in the word
                    print(guess, "is not in the word.")
                    tries -= 1
                    guessed_letters.append(guess)
                else: ## letter is in the word
                    print("Good job,", guess, "is in the word!")
                    guessed_letters.append(guess) ## append the guessed letter to guessed_letters
                    word_as_list = list(word_completion)
                    indices = [i for i, letter in enumerate(word) if letter == guess]
                    for index in indices:
                        word_as_list[index] = guess
                    word_completion = "".join(word_as_list)
                    if "_" not in word_completion:
                        guessed = True
            elif len(guess) == len(word) and guess.isalpha():
                if guess in guessed_words: ## user already guessed the word
                    print("You already guessed the word", guess)
                elif guess != word: ## user guessed the wrong word
                    print(guess, "is not the word.")
                    tries -= 1
                    guessed_words.append(guess)
                else: ## user guessed the correct word
                    guessed = True
                    word_completion = word
            else: ## invalid guess
                print("Not a valid guess.")
            print(display_hangman(tries)) ## print the current status of the hangman
            print(word_completion)
            print("\n")
        if guessed: ## user guessed the correct word
            print("Congrats, you guessed the word! You win!")
            guessedRightCount += 1 ## increase counter for wins
        else: ## user ran out of tries and loses
            print("Sorry, you ran out of tries. The word was " + word + ". Maybe next time!")
            guessedWrongCount += 1 ## increase counter for losses
        playAgain = input('Do you want to play again (y/n): ') ## ask to play again
        word = get_word() ## generate new word
    return (guessedRightCount,guessedWrongCount) ## return wins and losses
    ## end play(word)

## display_hangman(tries) - this function is used to display 
## the hangman as guesses are made
## returns the current stage to play(word) for display of 
## current status 
def display_hangman(tries):
    stages = [  # final state: head, torso, both arms, and both legs
                """
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / \\
                   -
                """,
                # head, torso, both arms, and one leg
                """
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / 
                   -
                """,
                # head, torso, and both arms
                """
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |      
                   -
                """,
                # head, torso, and one arm
                """
                   --------
                   |      |
                   |      O
                   |     \\|
                   |      |
                   |     
                   -
                """,
                # head and torso
                """
                   --------
                   |      |
                   |      O
                   |      |
                   |      |
                   |     
                   -
                """,
                # head
                """
                   --------
                   |      |
                   |      O
                   |    
                   |      
                   |     
                   -
                """,
                # initial empty state
                """
                   --------
                   |      |
                   |      
                   |    
                   |      
                   |     
                   -
                """
    ]
    return stages[tries]
## end hangman(tries)

## main() - initializes variables for calculating
## average wins and losses
## calls get_word() to get initial word 
## calls play(word) - passes word to it to play game and
## assigns values returned to guessRight, guessWrong
## calculates totalGuesses
## calculates averages 
## prints average wins and losses
def main():
    guessRight = 0
    guessWrong = 0
    totalGuess = 0
    averageLoss = 0
    averageWins = 0
    word = get_word()
    guessRight,guessWrong = play(word)
    totalGuess = guessRight + guessWrong ### calculate the total guesses
    averageLoss = float(guessWrong / totalGuess) ### calculate the average wins (floating point)
    averageWins = float(guessRight / totalGuess) ### calculate the average losses (floating point)
    print('Total number of games: {0:d}'.format(totalGuess)) ## print total games
    print('Total number of wins: {0:d}'.format(guessRight)) ## print total wins
    print('Average number of wins: {0:.2f}'.format(averageWins)) ### print the average wins to 2 decimals
    print('Total number of losses: {0:d}'.format(guessWrong)) ## print total losses
    print('Average number of losses: {0:.2f}'.format(averageLoss)) ### print the average losses to 2 decimals
## end main()

if __name__ == "__main__":
    main()
